@model StoryTeller.Models.StoryViewModel

@using (Html.BeginForm("Edit", "Story", FormMethod.Post, new { id = "formStoryEdit", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model=>model.FirstChapterText)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeForVotings, htmlAttributes: new { @class = "control-label  col-md-4 " })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TimeForVotings, new { htmlAttributes = new { @class = "form-control" } })
            <div style="display:inline-block;font-style:italic">
                In minutes
            </div>
            @Html.ValidationMessageFor(model => model.TimeForVotings, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeBetweenVotings, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TimeBetweenVotings, new { htmlAttributes = new { @class = "form-control" } })
            <div style="display:inline-block;font-style:italic">
                In minutes
            </div>
            @Html.ValidationMessageFor(model => model.TimeBetweenVotings, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxChapterLength, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.MaxChapterLength, new { htmlAttributes = new { @class = "form-control" } })
            <div style="display:inline-block;font-style:italic">
                Number of characters
            </div>
            @Html.ValidationMessageFor(model => model.MaxChapterLength, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxChaptersNumber, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.MaxChaptersNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxChapterLength, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
}

