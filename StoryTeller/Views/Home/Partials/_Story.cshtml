@model StoryTeller.Domain.Models.Story
@using Microsoft.AspNet.Identity

@{
    var id = "story" + Model.ID.ToString();
    var viewCountId = "viewsCount" + Model.ID;
}

<div class="marginTop50" id="@id">
    <hr />
    <div class="row story">

        @{
            string glyphicon;
            string color;

            if (Model.IsFull)
            {
                glyphicon = "glyphicon glyphicon-ok";
                color = "text-success";
            }
            else
            {
                glyphicon = "glyphicon glyphicon-pencil";
                color = "text-warning";
            }

        }

        <div class="col-md-10 col-md-offset-1">

            <div class=" topright">
                <button disabled type="button" class="btn btn-default btn-sm ">
                    <span class="glyphicon glyphicon-eye-open"></span><text id="@viewCountId"> @Model.ViewsCount</text>
                    <span> | </span>
                    <span class="glyphicon glyphicon-comment"></span> @Model.Comments.Count
                </button>
                @if (User.Identity.IsAuthenticated && Model.Creator.Id == User.Identity.GetUserId())
                {
                    <button type="button" class="btn btn-danger btn-sm " style="margin-left:10px" onclick="btnDeleteClick(@Model.ID)">
                        <span class="glyphicon glyphicon-trash"></span> Delete
                    </button>
                    <button type="button" class="btn btn-warning btn-sm" onclick="btnEditClick(@Model.ID)">
                        <span class="glyphicon glyphicon-list-alt"></span> Edit
                    </button>
                }
            </div>

            <div class="bottom-right">
                @{ if (User.Identity.IsAuthenticated)
                    {
                        var cssClass = "btn-default";
                        var idLikeBtn = "likeBtn" + Model.ID.ToString();
                        var idLikeCount = "likeCount" + Model.ID.ToString();

                        if (Model.Likes.ToList().Exists(x => x.User.Id == User.Identity.GetUserId()))
                        {
                            cssClass = "btn-warning";
                        }

                        <button id="@idLikeBtn" type="button" class=" btn @cssClass btn-sm " onclick="btnLikeClick(@Model.ID)">
                            <span class="glyphicon glyphicon-thumbs-up"></span> <span id="@idLikeCount">@Model.Likes.Count()</span>
                        </button>
                    }
                }
            </div>


            @if (Model.Picture != null)
            {
                <div class="col-md-3">
                    <img src="@Url.Action("StoryPhoto", "Story", new { storyID = Model.ID} )" style="height: 200px; width:200px;" />
                </div>
            }

            <div class="col-md-7">
                <p class="h1"><b>@Html.ActionLink(Model.Title, "Details", "Story", new { ID = Model.ID, }, htmlAttributes: new { @class = "title", @dataStoryID = Model.ID })</b> <small><time class="created" datetime="@Model.Created.ToString()"></time></small></p>
                <p class="h4 @color"><b>@Model.ProgressStatusText</b> <span class="@glyphicon"></span></p>
                <p class="h5">Author: <a class="userDetails" data-userID="@Model.Creator.Id" data-url="@Url.Action("GetUserDetails", "Account")">@Model.Creator.StoryTellerName </a></p>
                <p class="h5">Chapters: @Model.Chapters.Count()/@Model.MaxChaptersNumber</p>
                <div class="storyTextAll">
                    <p class="block-with-text">@Model.Chapters.First().Text </p>
                </div>
            </div>


            @*<div class="like-section">
                    @{Html.RenderPartial("~/Views/Home/Partial/_LikeSectionBigStory.cshtml", Model);}
                </div>*@
        </div>
    </div>

</div>
